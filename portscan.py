from logging import getLogger, ERROR
getLogger("scapy.runtime").setLevel(ERROR)
import argparse
import multiprocessing
import sys
from scapy.all import *
#scanme.nmap.org IP address: 45.33.32.156
parser = argparse.ArgumentParser(description='Options for scan')
#add types of scans
parser.add_argument('target_host', metavar='target_host', nargs='?')
parser.add_argument('-S', action="store_false", help='Stealth SYN scan')
parser.add_argument('-p-', type=int, default=1000, dest='ports', help='First number of ports. If not set up, scan first 1000')
args = parser.parse_args()

if args.target_host is None:
    raise Exception("Host is not submitted, try again")

range_of_ports=range(0, args.ports+1)

print('host: {}, ports: {}'.format(args.target_host, args.ports))

SYNACK = 'SA' #or 0x12
RSTACK = 0x14 #add more flags

def is_host_up(ip):
    conf.verb = 0
    try:
        pinging = sr1(IP(dst=ip)/ICMP())
        print("\n[*] Target is Up, Scan Begins...")
    except Exception:
        print("\n[*] Something is Wrong, exiting...")

def syn_scan(port):
    src_port = RandShort()
    conf.verb = 0
    SYNACK_packet = sr1(IP(dst=args.target_host)/TCP(sport=src_port, dport=port, flags='S'))
    try:
        packet_flag = SYNACK_packet.getlayer(TCP).flags
        if packet_flag == SYNACK:
            return True
        else:
            return False
    except Exception:
        return False
    finally:
        send(IP(dst=args.target_host)/TCP(sport=src_port, dport=port, flags = "R"))
             
def main():
    is_host_up(args.target_host)
    print ("\n[*] Scan begins...\n")
    for port in range_of_ports:
        status = syn_scan(port)
        if status:
            print("Port {}: Open".format(port))

main()
